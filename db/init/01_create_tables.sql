-- 오케스트레이션 에이전트 DB 스키마 초기화
-- 자율제조 구현을 위한 현장 작업자 친화적 AI 에이전트 시스템

-- PostgreSQL 확장 기능 활성화
CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
CREATE EXTENSION IF NOT EXISTS "pgcrypto";
CREATE EXTENSION IF NOT EXISTS "vector";

-- 1. 오케스트레이션 태스크 관리 테이블
CREATE TABLE IF NOT EXISTS ORCH_TASK_MANAGE (
    TASK_ID VARCHAR(255) PRIMARY KEY DEFAULT gen_random_uuid()::text,
    USER_ID VARCHAR(255) NOT NULL,
    STATUS VARCHAR(20) NOT NULL CHECK (STATUS IN ('ACTIVE', 'COMPLETED', 'FAILED', 'CANCELLED')),
    CREATED_AT TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    TOTAL_DURATION FLOAT,
    PRIORITY VARCHAR(10) NOT NULL CHECK (PRIORITY IN ('HIGH', 'NORMAL', 'LOW')),
    ERROR_MESSAGE TEXT
);

-- 2. 사용자 질의 관리 테이블
CREATE TABLE IF NOT EXISTS ORCH_USER_QUERY (
    QUERY_ID VARCHAR(255) PRIMARY KEY DEFAULT gen_random_uuid()::text,
    TASK_ID VARCHAR(255) NOT NULL REFERENCES ORCH_TASK_MANAGE(TASK_ID) ON DELETE CASCADE,
    QUERY_TEXT TEXT NOT NULL,
    QUERY_TYPE VARCHAR(20) NOT NULL CHECK (QUERY_TYPE IN ('MONITORING', 'PREDICTION', 'CONTROL')),
    PARSED_INTENT JSONB,
    USER_CONSTRAINTS VARCHAR(500),
    CREATED_AT TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    RESPONSE_TIME FLOAT
);

-- 3. 오케스트레이션 실행 계획 테이블
CREATE TABLE IF NOT EXISTS ORCH_EXECUTION_PLAN (
    PLAN_ID VARCHAR(255) PRIMARY KEY DEFAULT gen_random_uuid()::text,
    TASK_ID VARCHAR(255) NOT NULL REFERENCES ORCH_TASK_MANAGE(TASK_ID) ON DELETE CASCADE,
    QUERY_ID VARCHAR(255) NOT NULL REFERENCES ORCH_USER_QUERY(QUERY_ID) ON DELETE CASCADE,
    TASK_GRAPH JSONB NOT NULL,
    RISK_ASSESSMENT VARCHAR(10) CHECK (RISK_ASSESSMENT IN ('LOW', 'MEDIUM', 'HIGH')),
    CONSTRAINT_CHECK JSONB,
    PLAN_STATUS VARCHAR(20) NOT NULL CHECK (PLAN_STATUS IN ('PENDING', 'EXECUTING', 'COMPLETED', 'FAILED')),
    CREATED_AT TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    STARTED_AT TIMESTAMP WITH TIME ZONE,
    COMPLETED_AT TIMESTAMP WITH TIME ZONE,
    EMBEDDER_INFO VARCHAR(255) NOT NULL
);

-- 4. 에이전트 서브태스크 실행 테이블
CREATE TABLE IF NOT EXISTS ORCH_AGENT_SUBTASK (
    SUBTASK_ID VARCHAR(255) PRIMARY KEY DEFAULT gen_random_uuid()::text,
    PLAN_ID VARCHAR(255) NOT NULL REFERENCES ORCH_EXECUTION_PLAN(PLAN_ID) ON DELETE CASCADE,
    AGENT_ID VARCHAR(255) NOT NULL,
    AGENT_TYPE VARCHAR(20) NOT NULL CHECK (AGENT_TYPE IN ('MONITORING', 'PREDICTION', 'CONTROL', 'ANALYSIS')),
    SEQUENCE_ORDER INTEGER NOT NULL,
    INPUT_DATA JSONB,
    OUTPUT_DATA JSONB,
    SUBTASK_STATUS VARCHAR(20) NOT NULL CHECK (SUBTASK_STATUS IN ('QUEUED', 'RUNNING', 'SUCCESS', 'FAILED', 'SKIPPED')),
    ERROR_MESSAGE TEXT,
    ACTUAL_DURATION FLOAT,
    STARTED_AT TIMESTAMP WITH TIME ZONE,
    COMPLETED_AT TIMESTAMP WITH TIME ZONE,
    RETRY_COUNT INTEGER NOT NULL DEFAULT 0
);

-- 5. 제약조건 위반 관리 테이블
CREATE TABLE IF NOT EXISTS ORCH_CONSTRAINT_VIOLATION (
    VIOLATION_ID VARCHAR(255) PRIMARY KEY DEFAULT gen_random_uuid()::text,
    PLAN_ID VARCHAR(255) NOT NULL REFERENCES ORCH_EXECUTION_PLAN(PLAN_ID) ON DELETE CASCADE,
    SUBTASK_ID VARCHAR(255) REFERENCES ORCH_AGENT_SUBTASK(SUBTASK_ID) ON DELETE SET NULL,
    CONSTRAINT_TYPE VARCHAR(20) NOT NULL CHECK (CONSTRAINT_TYPE IN ('RESOURCE', 'TIME', 'SAFETY', 'POLICY')),
    CONSTRAINT_NAME VARCHAR(255) NOT NULL,
    EXPECTED_VALUE VARCHAR(255),
    ACTUAL_VALUE VARCHAR(255),
    SEVERITY_LEVEL VARCHAR(10) NOT NULL CHECK (SEVERITY_LEVEL IN ('INFO', 'WARNING', 'ERROR', 'CRITICAL')),
    IS_BLOCKING BOOLEAN NOT NULL DEFAULT FALSE,
    RESOLUTION_ACTION VARCHAR(500),
    DETECTED_AT TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    RESOLVED_AT TIMESTAMP WITH TIME ZONE
);

-- 6. 사용자 피드백 관리 테이블
CREATE TABLE IF NOT EXISTS ORCH_USER_FEEDBACK (
    FEEDBACK_ID VARCHAR(255) PRIMARY KEY DEFAULT gen_random_uuid()::text,
    TASK_ID VARCHAR(255) NOT NULL REFERENCES ORCH_TASK_MANAGE(TASK_ID) ON DELETE CASCADE,
    PLAN_ID VARCHAR(255) REFERENCES ORCH_EXECUTION_PLAN(PLAN_ID) ON DELETE SET NULL,
    FEEDBACK_TYPE VARCHAR(20) NOT NULL CHECK (FEEDBACK_TYPE IN ('MODIFICATION', 'CANCELLATION', 'APPROVAL', 'COMPLAINT')),
    FEEDBACK_CONTENT TEXT,
    ACTION_TAKEN VARCHAR(20) NOT NULL CHECK (ACTION_TAKEN IN ('APPLIED', 'IGNORED', 'DEFERRED')),
    SYSTEM_RESPONSE TEXT,
    IMPACT_SCOPE VARCHAR(20) CHECK (IMPACT_SCOPE IN ('CURRENT_TASK', 'FUTURE_TASKS', 'GLOBAL_SETTINGS')),
    SUBMITTED_AT TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    PROCESSED_AT TIMESTAMP WITH TIME ZONE,
    SATISFACTION_SCORE INTEGER CHECK (SATISFACTION_SCORE >= 1 AND SATISFACTION_SCORE <= 5)
);

-- 7. 외부 지식 관리 테이블
CREATE TABLE IF NOT EXISTS ORCH_EXTERNAL_KNOWLEDGE (
    KNOWLEDGE_ID VARCHAR(255) PRIMARY KEY DEFAULT gen_random_uuid()::text,
    DOCUMENT_TITLE VARCHAR(500) NOT NULL,
    DOCUMENT_TYPE VARCHAR(20) NOT NULL CHECK (DOCUMENT_TYPE IN ('RESEARCH_PAPER', 'MANUAL', 'GUIDELINE', 'FAQ')),
    CONTENT_SUMMARY TEXT,
    EMBEDDING_VECTOR vector(1536),
    METADATA JSONB,
    RELEVANCE_SCORE FLOAT,
    ACCESS_COUNT INTEGER NOT NULL DEFAULT 0,
    LAST_ACCESSED TIMESTAMP WITH TIME ZONE,
    CREATED_AT TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    EMBEDDER_INFO VARCHAR(255) NOT NULL,
    VERSION VARCHAR(50)
);

-- 8. 에이전트 메모리 관리 테이블
CREATE TABLE IF NOT EXISTS ORCH_AGENT_MEMORY (
    MEMORY_ID VARCHAR(255) PRIMARY KEY DEFAULT gen_random_uuid()::text,
    AGENT_ID VARCHAR(255) NOT NULL,
    MEMORY_TYPE VARCHAR(20) NOT NULL CHECK (MEMORY_TYPE IN ('SHORT_TERM', 'LONG_TERM', 'EPISODIC')),
    CONTEXT_DATA JSONB NOT NULL,
    EMBEDDING_VECTOR vector(1536),
    IMPORTANCE_SCORE FLOAT NOT NULL,
    DECAY_RATE FLOAT NOT NULL,
    ACCESS_FREQUENCY INTEGER NOT NULL DEFAULT 0,
    CREATED_AT TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    LAST_ACCESSED TIMESTAMP WITH TIME ZONE,
    EXPIRY_DATE TIMESTAMP WITH TIME ZONE
);

-- 9. 인스트럭션 재작성 이력 테이블
CREATE TABLE IF NOT EXISTS ORCH_INSTRUCTION_REWRITE (
    REWRITE_ID VARCHAR(255) PRIMARY KEY DEFAULT gen_random_uuid()::text,
    QUERY_ID VARCHAR(255) NOT NULL REFERENCES ORCH_USER_QUERY(QUERY_ID) ON DELETE CASCADE,
    ORIGINAL_INSTRUCTION TEXT NOT NULL,
    REWRITTEN_INSTRUCTION TEXT NOT NULL,
    REWRITE_REASON VARCHAR(500),
    IMPROVEMENT_SCORE FLOAT,
    AGENT_COMPATIBILITY JSONB,
    CREATED_AT TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    VALIDATION_STATUS VARCHAR(20) NOT NULL CHECK (VALIDATION_STATUS IN ('PENDING', 'VALIDATED', 'REJECTED'))
);

-- 10. 검색 증강 이력 테이블
CREATE TABLE IF NOT EXISTS ORCH_SEARCH_AUGMENTATION (
    AUGMENTATION_ID VARCHAR(255) PRIMARY KEY DEFAULT gen_random_uuid()::text,
    PLAN_ID VARCHAR(255) NOT NULL REFERENCES ORCH_EXECUTION_PLAN(PLAN_ID) ON DELETE CASCADE,
    SEARCH_QUERY TEXT NOT NULL,
    SEARCH_RESULTS JSONB,
    SELECTED_DOCUMENTS JSONB,
    RELEVANCE_SCORES JSONB,
    AUGMENTATION_TYPE VARCHAR(20) NOT NULL CHECK (AUGMENTATION_TYPE IN ('CONTEXT', 'KNOWLEDGE', 'EXAMPLE')),
    CREATED_AT TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    USAGE_COUNT INTEGER NOT NULL DEFAULT 0
);

-- 11. 성능 지표 관리 테이블
CREATE TABLE IF NOT EXISTS ORCH_PERFORMANCE_METRICS (
    METRIC_ID VARCHAR(255) PRIMARY KEY DEFAULT gen_random_uuid()::text,
    TASK_ID VARCHAR(255) NOT NULL REFERENCES ORCH_TASK_MANAGE(TASK_ID) ON DELETE CASCADE,
    METRIC_TYPE VARCHAR(20) NOT NULL CHECK (METRIC_TYPE IN ('LATENCY', 'THROUGHPUT', 'ACCURACY', 'RESOURCE')),
    METRIC_NAME VARCHAR(255) NOT NULL,
    METRIC_VALUE FLOAT NOT NULL,
    UNIT VARCHAR(50) NOT NULL,
    THRESHOLD_MIN FLOAT,
    THRESHOLD_MAX FLOAT,
    MEASURED_AT TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    AGENT_ID VARCHAR(255)
);

-- 12. 알람 설정 관리 테이블
CREATE TABLE IF NOT EXISTS ORCH_ALERT_CONFIG (
    CONFIG_ID VARCHAR(255) PRIMARY KEY DEFAULT gen_random_uuid()::text,
    ALERT_NAME VARCHAR(255) NOT NULL,
    ALERT_TYPE VARCHAR(20) NOT NULL CHECK (ALERT_TYPE IN ('PERFORMANCE', 'ERROR', 'CONSTRAINT', 'FEEDBACK')),
    CONDITION_RULE JSONB NOT NULL,
    NOTIFICATION_CHANNEL VARCHAR(20) NOT NULL CHECK (NOTIFICATION_CHANNEL IN ('EMAIL', 'SMS', 'SLACK', 'WEBHOOK')),
    RECIPIENT_LIST JSONB NOT NULL,
    SEVERITY VARCHAR(10) NOT NULL CHECK (SEVERITY IN ('LOW', 'MEDIUM', 'HIGH', 'CRITICAL')),
    IS_ENABLED BOOLEAN NOT NULL DEFAULT TRUE,
    CREATED_AT TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- 인덱스 생성
CREATE INDEX IF NOT EXISTS idx_task_manage_status ON ORCH_TASK_MANAGE(STATUS);
CREATE INDEX IF NOT EXISTS idx_task_manage_created_at ON ORCH_TASK_MANAGE(CREATED_AT);
CREATE INDEX IF NOT EXISTS idx_user_query_task_id ON ORCH_USER_QUERY(TASK_ID);
CREATE INDEX IF NOT EXISTS idx_user_query_type ON ORCH_USER_QUERY(QUERY_TYPE);
CREATE INDEX IF NOT EXISTS idx_execution_plan_task_id ON ORCH_EXECUTION_PLAN(TASK_ID);
CREATE INDEX IF NOT EXISTS idx_execution_plan_status ON ORCH_EXECUTION_PLAN(PLAN_STATUS);
CREATE INDEX IF NOT EXISTS idx_agent_subtask_plan_id ON ORCH_AGENT_SUBTASK(PLAN_ID);
CREATE INDEX IF NOT EXISTS idx_agent_subtask_status ON ORCH_AGENT_SUBTASK(SUBTASK_STATUS);
CREATE INDEX IF NOT EXISTS idx_agent_subtask_agent_type ON ORCH_AGENT_SUBTASK(AGENT_TYPE);
CREATE INDEX IF NOT EXISTS idx_constraint_violation_plan_id ON ORCH_CONSTRAINT_VIOLATION(PLAN_ID);
CREATE INDEX IF NOT EXISTS idx_constraint_violation_severity ON ORCH_CONSTRAINT_VIOLATION(SEVERITY_LEVEL);
CREATE INDEX IF NOT EXISTS idx_user_feedback_task_id ON ORCH_USER_FEEDBACK(TASK_ID);
CREATE INDEX IF NOT EXISTS idx_external_knowledge_type ON ORCH_EXTERNAL_KNOWLEDGE(DOCUMENT_TYPE);
CREATE INDEX IF NOT EXISTS idx_agent_memory_agent_id ON ORCH_AGENT_MEMORY(AGENT_ID);
CREATE INDEX IF NOT EXISTS idx_agent_memory_type ON ORCH_AGENT_MEMORY(MEMORY_TYPE);
CREATE INDEX IF NOT EXISTS idx_performance_metrics_task_id ON ORCH_PERFORMANCE_METRICS(TASK_ID);
CREATE INDEX IF NOT EXISTS idx_performance_metrics_type ON ORCH_PERFORMANCE_METRICS(METRIC_TYPE);

-- 벡터 인덱스 (pgvector 확장 사용)
CREATE INDEX IF NOT EXISTS idx_external_knowledge_embedding ON ORCH_EXTERNAL_KNOWLEDGE 
USING ivfflat (EMBEDDING_VECTOR vector_cosine_ops) WITH (lists = 100);

CREATE INDEX IF NOT EXISTS idx_agent_memory_embedding ON ORCH_AGENT_MEMORY 
USING ivfflat (EMBEDDING_VECTOR vector_cosine_ops) WITH (lists = 100);

-- 자동 업데이트 트리거 함수
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.UPDATED_AT = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ language 'plpgsql';

-- 태스크 관리 테이블 업데이트 시간 자동 갱신 트리거
CREATE TRIGGER update_task_manage_updated_at 
    BEFORE UPDATE ON ORCH_TASK_MANAGE 
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

-- 알람 설정 테이블 업데이트 시간 자동 갱신 트리거
CREATE TRIGGER update_alert_config_updated_at 
    BEFORE UPDATE ON ORCH_ALERT_CONFIG 
    FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

-- 샘플 데이터 추가
INSERT INTO ORCH_TASK_MANAGE (USER_ID, STATUS, PRIORITY) 
VALUES ('system_admin', 'ACTIVE', 'HIGH');

INSERT INTO ORCH_ALERT_CONFIG (ALERT_NAME, ALERT_TYPE, CONDITION_RULE, NOTIFICATION_CHANNEL, RECIPIENT_LIST, SEVERITY)
VALUES (
    'High Error Rate Alert',
    'ERROR', 
    '{"error_rate": {"threshold": 0.1, "window": "5m"}}',
    'EMAIL',
    '["admin@prism-orch.com"]',
    'HIGH'
);

-- 뷰 생성 - 태스크 상태 요약
CREATE OR REPLACE VIEW TASK_STATUS_SUMMARY AS
SELECT 
    STATUS,
    COUNT(*) as TASK_COUNT,
    AVG(TOTAL_DURATION) as AVG_DURATION
FROM ORCH_TASK_MANAGE 
GROUP BY STATUS;

-- 뷰 생성 - 에이전트 성능 요약
CREATE OR REPLACE VIEW AGENT_PERFORMANCE_SUMMARY AS
SELECT 
    s.AGENT_TYPE,
    COUNT(*) as TOTAL_EXECUTIONS,
    COUNT(CASE WHEN s.SUBTASK_STATUS = 'SUCCESS' THEN 1 END) as SUCCESSFUL_EXECUTIONS,
    AVG(s.ACTUAL_DURATION) as AVG_DURATION,
    AVG(s.RETRY_COUNT) as AVG_RETRIES
FROM ORCH_AGENT_SUBTASK s
GROUP BY s.AGENT_TYPE;