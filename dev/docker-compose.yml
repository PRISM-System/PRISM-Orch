# vLLM 고성능 추론 서버 Docker 구성

version: '3.8'

services:
  # vLLM 추론 서버
  vllm-server:
    build:
      context: .
      dockerfile: docker/Dockerfile.vllm
    container_name: vllm_inference_server
    ports:
      - "8000:8000"
    environment:
      - MODEL_NAME=microsoft/DialoGPT-large
      - TENSOR_PARALLEL_SIZE=2
      - MAX_MODEL_LEN=4096
      - GPU_MEMORY_UTILIZATION=0.9
      - CUDA_VISIBLE_DEVICES=0,1  # 사용할 GPU 지정
    volumes:
      - model_cache:/root/.cache/huggingface
      - ./logs:/app/logs
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 2  # GPU 개수
              capabilities: [gpu]
    shm_size: 16gb  # 공유 메모리 크기 (중요!)

  # Redis (캐싱용)
  redis:
    image: redis:7-alpine
    container_name: vllm_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    command: redis-server --maxmemory 2gb --maxmemory-policy allkeys-lru

  # Nginx (로드 밸런서 + 캐싱)
  nginx:
    image: nginx:alpine
    container_name: vllm_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - vllm-server
    restart: unless-stopped

  # 모니터링 (Prometheus + Grafana)
  prometheus:
    image: prom/prometheus:latest
    container_name: vllm_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: vllm_grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    restart: unless-stopped

volumes:
  model_cache:
  redis_data:
  prometheus_data:
  grafana_data: 